6. Git에게 맡기지 않을 것들.
포함할 필요가 없을때
-자동으로 생성 또는 다운로드되는 파일들 (빌드 결과물, 라이브러리)
포함하지 말아야 할 때
-보안상 민감한 정보를 담은 파일.(서버의 비밀번호, 회사코드)


이러한 파일들을 무시하고 올리기 위하여 

.gitignore을 사용한다.



.gitignore 파일을 생성한다.
그리고 해당 폴더의 제외할 파일명을 적어주면됨.

secrets.yaml 파일에 해당의 정보다 있으니

id: admin
pw: 1234abcd 


파일명을 작성해주자.!!!!!!!!

tip 각 프레임워크 보면 .gitigone 파일이 있고, 조건에 맞는 파일들을 무시한다.






# 이렇게 #를 사용해서 주석

# 모든 file.c
file.c (파일이름 그대로)
ex) secrets.yaml

# 최상위 폴더의 file.c
/file.c
ex) foder/secrets.yaml

# 모든 .c 확장자 파일
*.c
ex) *.yaml

# .c 확장자지만 무시하지 않을 파일
!not_ignore_this.c


# logs란 이름의 파일 또는 폴더와 그 내용들
logs

# logs란 이름의 폴더와 그 내용들
logs/

# logs 폴더 바로 안의 debug.log와 .c 파일들
logs/debug.log
logs/*.c

# logs 폴더 바로 안, 또는 그 안의 다른 폴더(들) 안의 debug.log
logs/**/debug.log




-------------------------------------------------------------------------------------------

7. 타임캡슐

git add . 하고

git commit 을 하면 vscode의 겨우 vs자체 에디터로 킴 vim이 아니라.
소스트리의 History를 확인하면 commit된  히스토리들이 나열됨.




--.--
git log
: git의 히스토리를 전부 보여줌 이건 또 vim으로 켜지네?


--.--
git diff
- git의 변경사항을 더 자세하게 설명.

-------------------------------------------------------------------------------------------





--.--